{"version":3,"sources":["webpack:///./src/app/admin-dashboard/add-group-dialog.html","webpack:///./src/app/admin-dashboard/add-org-dialog.html","webpack:///./src/app/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/admin-dashboard/admin-dashboard.component.scss","webpack:///./src/app/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/admin-layout/admin-layout.module.ts","webpack:///./src/app/admin-layout/admin-layout.routing.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dbaas/dbaas.component.html","webpack:///./src/app/dbaas/dbaas.component.scss","webpack:///./src/app/dbaas/dbaas.component.ts","webpack:///./src/app/iaas/create-vm/create-vm.component.html","webpack:///./src/app/iaas/create-vm/create-vm.component.scss","webpack:///./src/app/iaas/create-vm/create-vm.component.ts","webpack:///./src/app/iaas/iaas.component.html","webpack:///./src/app/iaas/iaas.component.scss","webpack:///./src/app/iaas/iaas.component.ts","webpack:///./src/app/iaas/tshirt/item.component.html","webpack:///./src/app/iaas/tshirt/item.component.scss","webpack:///./src/app/iaas/tshirt/item.component.ts","webpack:///./src/app/iaas/tshirt/item.service.ts","webpack:///./src/app/lbaas/lbaas.component.html","webpack:///./src/app/lbaas/lbaas.component.scss","webpack:///./src/app/lbaas/lbaas.component.ts","webpack:///./src/app/new-org/new-org.component.html","webpack:///./src/app/new-org/new-org.component.scss","webpack:///./src/app/new-org/new-org.component.ts","webpack:///./src/app/org-setup/org-setup.component.html","webpack:///./src/app/org-setup/org-setup.component.scss","webpack:///./src/app/org-setup/org-setup.component.ts"],"names":[],"mappings":"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","file":"admin-layout-admin-layout-module.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Select Group</h1>\\n<div mat-dialog-content>\\n    <mat-form-field>\\n    <mat-select [(ngModel)]=\\\"choosenEmoji\\\" (ngModelChange)=\\\"selectedOption()\\\">\\n        <mat-option *ngFor=\\\"let emoji of emojis\\\" [value]=\\\"emoji\\\">\\n            {{ emoji }}\\n        </mat-option>\\n    </mat-select>\\n    </mat-form-field>\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n  <button mat-button (click)=\\\"confirmSelection()\\\" color=\\\"primary\\\">Ok</button>\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Select Org</h1>\\n<div mat-dialog-content>\\n    <mat-form-field>\\n    <mat-select [(ngModel)]=\\\"choosenEmoji\\\">\\n      <mat-option *ngFor=\\\"let emoji of emojis\\\" [value]=\\\"emoji\\\">\\n        {{ emoji }}\\n      </mat-option>\\n    </mat-select>\\n    </mat-form-field>\\n</div>\\n\\n<div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-button (click)=\\\"confirmSelection()\\\" color=\\\"primary\\\">Ok</button>\\n</div>\"","module.exports = \"<div>\\n    <h1>Admin Dashboard</h1>\\n    <h2>Inbox - Users waiting to be Onboarded</h2>\\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n    <ng-container matColumnDef=\\\"NUID\\\">\\n      <mat-header-cell *matHeaderCellDef> NUID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.nuid}} </mat-cell>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"Name\\\">\\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.name}} </mat-cell>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"Org\\\">\\n      <mat-header-cell *matHeaderCellDef> Org </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata, let i = index\\\"> \\n          <!-- new user -->\\n          <ng-template [ngIf]=\\\"mockdata.newUser\\\">\\n            <button *ngIf=\\\"noOrgSelected\\\" mat-button color=\\\"primary\\\" (click)=\\\"openAddOrgDialog()\\\">Add Org</button>\\n            <div *ngIf=\\\"!noOrgSelected\\\"> {{selectedOrg}} </div>\\n            <!-- <div *ngIf=\\\"!noOrgSelected\\\"> {{mockdata[i].org}} </div> -->\\n          </ng-template>\\n          <!-- <button *ngIf=\\\"mockdata.newUser\\\" mat-button color=\\\"primary\\\" (click)=\\\"openAddOrgDialog()\\\">Add Org</button> -->\\n          <!-- <div *ngIf=\\\"!noOrgSelected\\\"> {{selectedOrg}} </div> -->\\n\\n          <!-- not new user -->\\n          <div *ngIf=\\\"!mockdata.newUser\\\"> {{mockdata.org}} </div>\\n          <!-- <div *ngIf=\\\"!noOrgSelected && !mockdata.newUser\\\"> {{mockdata.org}} </div> -->\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Group\\\">\\n      <mat-header-cell *matHeaderCellDef> Group </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> \\n          <!-- new user -->\\n          <ng-template [ngIf]=\\\"mockdata.newUser\\\">\\n            <button *ngIf=\\\"noGroupSelected\\\" mat-button color=\\\"primary\\\" (click)=\\\"openAddGroupDialog()\\\">Add Group</button>\\n            <div *ngIf=\\\"!noGroupSelected\\\"> {{selectedGroup}} </div>\\n          </ng-template>\\n\\n          <!-- not new user -->\\n          <div *ngIf=\\\"!mockdata.newUser\\\"> {{mockdata.group}} </div>\\n\\n        <!-- <button *ngIf=\\\"noGroupSelected && mockdata.newUser\\\" mat-button color=\\\"primary\\\" (click)=\\\"openAddGroupDialog()\\\">Add Group</button>\\n        <div *ngIf=\\\"!noGroupSelected\\\"> {{selectedGroup}} </div> -->\\n      </mat-cell>\\n    </ng-container>\\n  \\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  \\n    </mat-table>\\n\\n<button mat-raised-button class=\\\"org-setup\\\" routerLink=\\\"/org-setup\\\"> Org Setup </button>\\n\\n</div>\\n\"","module.exports = \"h1, h2 {\\n  text-align: center; }\\n\\nmat-table {\\n  width: 80%;\\n  margin-top: 80px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.org-setup {\\n  margin-top: 30px;\\n  margin-left: 120px;\\n  margin-right: auto;\\n  font-size: 20px;\\n  font-style: none; }\\n\\n.cdk-global-overlay-wrapper, .cdk-overlay-container {\\n  z-index: 99999 !important; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { $ } from 'protractor';\n\nexport interface Inbox {\n  nuid: string;\n  name: string;\n  org: string;\n  group: string;\n  newUser: boolean;\n}\n\nexport interface DialogData {\n  org: string;\n  group: string;\n}\n\nconst MOCK_DATA: Inbox[] = [\n  {nuid: \"X12345\", name: 'Anjana', org: '', group: '', newUser: true},\n  {nuid: \"Y67890\", name: 'Sonali', org: 'CTO', group: 'STS', newUser: false},\n  {nuid: \"Z11235\", name: 'Chandra', org: '', group: '', newUser: true}\n];\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  public noOrgSelected: boolean = true;\n  public noGroupSelected: boolean = true;\n  public selectedOrg: any;\n  public selectedGroup: any;\n  public index: number = 0;\n  displayedColumns: string[] = ['NUID', 'Name', 'Org', 'Group'];\n  dataSource = MOCK_DATA;\n\n  openAddOrgDialog() {\n    const addOrgDialogRef = this.dialog.open(AddOrgDialog);\n\n    addOrgDialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      this.selectedOrg = `${result}`;\n      this.noOrgSelected = false;\n      MOCK_DATA[this.index].org = this.selectedOrg;\n    });\n  }\n\n  openAddGroupDialog() {\n    const addGroupDialogRef = this.dialog.open(AddGroupDialog);\n\n    addGroupDialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      this.selectedGroup = `${result}`;\n      this.noGroupSelected = false;\n      \n    });\n  }\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'add-group-dialog',\n  templateUrl: 'add-group-dialog.html',\n})\nexport class AddGroupDialog {\n\n  emojis = ['🐼', '💪', '🐷', '🤖', '👽', '🐥'];\n  choosenEmoji: string;\n\n  constructor(\n    public addGroupDialogRef: MatDialogRef<AddGroupDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n    selectedOption() {\n      console.log(\"selected \" + this.choosenEmoji);\n    }\n\n    onNoClick(): void {\n      this.addGroupDialogRef.close();\n    }\n\n    confirmSelection() {\n      this.addGroupDialogRef.close(this.choosenEmoji);\n    }\n}\n\n@Component({\n  selector: 'add-org-dialog',\n  templateUrl: 'add-org-dialog.html',\n})\nexport class AddOrgDialog {\n\n  emojis = ['🐥', '👽', '🐼', '💪', '🐷', '🤖'];\n  choosenEmoji: string;\n\n  constructor(\n    public addOrgDialogRef: MatDialogRef<AddOrgDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n\n    selectedOption() {\n      console.log(\"selected \" + this.choosenEmoji);\n    }\n    \n    onNoClick(): void {\n      this.addOrgDialogRef.close();\n    }\n\n    confirmSelection() {\n      this.addOrgDialogRef.close(this.choosenEmoji);\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\n// import { LoginComponent } from '../login/login.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { IaasComponent } from '../iaas/iaas.component';\nimport { ItemComponent } from '../iaas/tshirt/item.component';\nimport { CreateVmComponent } from '../iaas/create-vm/create-vm.component';\nimport { DbaasComponent } from '../dbaas/dbaas.component';\nimport { LbaasComponent } from '../lbaas/lbaas.component';\nimport { AdminDashboardComponent, AddGroupDialog, AddOrgDialog } from '../admin-dashboard/admin-dashboard.component';\n\nimport { OrgSetupComponent } from '../org-setup/org-setup.component';\n// import { OnBoardUserComponent } from '../on-board-user/on-board-user.component';\nimport { NewOrgComponent } from '../new-org/new-org.component'\n\nimport { MaterialModule } from '../app.module';\n\n// import { MatTabsModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSidenavModule} from '@angular/material';\n// import { MatTableModule } from '@angular/material/table';\n// import { MatSelectModule } from '@angular/material/select';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http'\n// import { MatToolbarModule } from '@angular/material/toolbar';\n// import { MatCheckboxModule } from '@angular/material/checkbox';\n// import {CdkTableModule} from '@angular/cdk/table';\n\n\n@NgModule({\n  exports: [\n    // LoginComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    MaterialModule,\n    // ReactiveFormsModule,\n    // MatToolbarModule,\n    // MatIconModule,\n    // MatTableModule,\n    // MatSidenavModule,\n    // MatFormFieldModule,\n    // MatInputModule,\n    // MatSelectModule,\n    // MatCheckboxModule,\n    // CdkTableModule,\n    //MatTableDataSource,\n    FormsModule,\n    // BrowserModule,\n    HttpClientModule,\n    HttpModule,\n  ],\n  declarations: [\n    // LoginComponent,\n    DashboardComponent,\n    IaasComponent,\n    DbaasComponent,\n    LbaasComponent,\n    ItemComponent,\n    CreateVmComponent,\n    AdminDashboardComponent,\n    OrgSetupComponent,\n    // OnBoardUserComponent,\n    NewOrgComponent,\n    AddGroupDialog,\n    AddOrgDialog\n  ],\n  providers: [],\n  entryComponents: [AdminDashboardComponent, AddGroupDialog, AddOrgDialog],\n})\n\nexport class AdminLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { IaasComponent } from '../iaas/iaas.component';\nimport { ItemComponent } from '../iaas/tshirt/item.component';\nimport { CreateVmComponent } from '../iaas/create-vm/create-vm.component';\nimport { DbaasComponent } from '../dbaas/dbaas.component';\nimport { LbaasComponent } from '../lbaas/lbaas.component';\n// import { OnBoardUserComponent } from '../on-board-user/on-board-user.component';\nimport { AdminDashboardComponent } from '../admin-dashboard/admin-dashboard.component';\nimport { OrgSetupComponent } from '../org-setup/org-setup.component';\nimport { NewOrgComponent } from '../new-org/new-org.component'\n\n\nexport const AdminLayoutRoutes: Routes = [\n  // { path: '', component: LoginComponent },\n  { path: '', component: DashboardComponent },\n  { path: 'admin-dashboard', component: AdminDashboardComponent },\n  // { path: 'create-vm', component: CreateVmComponent },\n  // { path: 'item', component: ItemComponent },\n  { path: 'dbaas', component: DbaasComponent },\n  { path: 'lbaas', component: LbaasComponent },\n  { path: 'org-setup', component: OrgSetupComponent },\n  // { path: 'on-board-user', component: OnBoardUserComponent },\n  { path: 'new-org', component: NewOrgComponent },\n  { \n    path: 'iaas', component: IaasComponent,\n    children: [\n      { path: 'create-vm', component: CreateVmComponent },\n      { path: 'item', component: ItemComponent },\n    ]\n  },\n\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forRoot(AdminLayoutRoutes),\n    ],\n    exports: [\n      RouterModule\n    ],\n  })\nexport class AppRoutingModule {\n}","module.exports = \"<div >\\n  <h1>Service Requests</h1>\\n  <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Top header -->\\n  <!-- <ng-container matColumnDef=\\\"position\\\"> -->\\n    <!-- <th mat-header-cell *matHeaderCellDef> Service Requests </th> -->\\n  <!-- </ng-container> -->\\n\\n  <!-- <th> Service Requests </th> -->\\n  <!-- <mat-header-cell> Service Requests </mat-header-cell> -->\\n\\n  <ng-container matColumnDef=\\\"Request ID\\\">\\n    <mat-header-cell *matHeaderCellDef> Request ID </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.id}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"Description\\\">\\n    <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.description}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"Service Type\\\">\\n      <mat-header-cell *matHeaderCellDef> Service Type </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.type}} </mat-cell>\\n    </ng-container>\\n\\n  <ng-container matColumnDef=\\\"Status\\\">\\n    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.status}} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n  </mat-table>\\n</div>\\n\\n<!-- <button routerLink=\\\"/admin-dashboard\\\">Admin Dashboard</button> -->\\n\"","module.exports = \"h1 {\\n  text-align: center; }\\n\\nimg {\\n  margin-left: 310px;\\n  margin-right: auto; }\\n\\nmat-table {\\n  width: 95%;\\n  margin-top: 80px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface Orders {\n  description: string;\n  id: string;\n  type: string;\n  status: string;\n}\n\nconst MOCK_DATA: Orders[] = [\n  {id: \"ORCL12C-0011\", description: 'New Oracle 12c Single Instance', type: \"DbaaS\", status: 'In Progress'},\n  {id: \"ORCL12C-0006\", description: 'New Oracle 12c PDB (Multi-Tenant)', type: \"DbaaS\", status: 'Completed'},\n  {id: \"ORCL12C-0009\", description: 'New Oracle 11g', type: \"DbaaS\", status: 'In Progress'}\n];\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n\nexport class DashboardComponent implements OnInit {\n\n  displayedColumns: string[] = ['Request ID', 'Description', 'Service Type', 'Status'];\n  dataSource = MOCK_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n    <h1>DBaaS Request Service</h1>\\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n    <ng-container matColumnDef=\\\"Request ID\\\">\\n      <mat-header-cell *matHeaderCellDef> Request ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.id}} </mat-cell>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"Description\\\">\\n      <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.description}} </mat-cell>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"Status\\\">\\n      <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.status}} </mat-cell>\\n    </ng-container>\\n  \\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  \\n    </mat-table>\\n\\n    <!-- Create New CDB, Create New PDB, Clone CDB, Clone PDB -->\\n    <button mat-raised-button routerLink=\\\"/create-vm\\\">Create New CDB</button>\\n    <button mat-raised-button routerLink=\\\"/create-vm\\\">Create New PDB</button>\\n    <button mat-raised-button routerLink=\\\"/create-vm\\\">Clone CDB</button>\\n    <button mat-raised-button routerLink=\\\"/create-vm\\\">Clone PDB</button>\\n  </div>\"","module.exports = \"h1 {\\n  text-align: center; }\\n\\nimg {\\n  margin-left: 310px;\\n  margin-right: auto; }\\n\\nmat-table {\\n  width: 80%;\\n  margin-top: 80px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nbutton {\\n  margin-top: 30px;\\n  margin-left: 120px;\\n  margin-right: auto;\\n  font-size: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface Orders {\n  description: string;\n  id: string;\n  status: string;\n}\n\nconst MOCK_DATA: Orders[] = [\n  {id: \"ORCL12C-0011\", description: 'New Oracle 12c Single Instance', status: 'In Progress'},\n  {id: \"ORCL12C-0006\", description: 'New Oracle 12c PDB (Multi-Tenant)', status: 'Completed'},\n  {id: \"ORCL12C-0009\", description: 'New Oracle 11g', status: 'In Progress'}\n];\n\n@Component({\n  selector: 'app-dbaas',\n  templateUrl: './dbaas.component.html',\n  styleUrls: ['./dbaas.component.scss']\n})\nexport class DbaasComponent implements OnInit {\n\n  displayedColumns: string[] = ['Request ID', 'Description', 'Status'];\n  dataSource = MOCK_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n    <mat-form-field class=\\\"addMarginFromTop\\\"> \\n      <!-- VM Host Name: -->\\n      <input matInput placeholder=\\\"VM Host Name\\\" [(ngModel)]=\\\"enteredName\\\">\\n      <!-- <mat-hint align=\\\"start\\\"><strong>a-z, 0-9, and '-' only</strong> </mat-hint> -->\\n      <!-- <mat-error *ngIf=\\\"hostName.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\n    </mat-form-field>\\n  \\n    <mat-form-field> \\n      <mat-select placeholder=\\\"VM Size: \\\" [(ngModel)]=\\\"selectedValue\\\">\\n        <mat-option *ngFor=\\\"let size of sizes\\\" [value]=size> \\n          {{size}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n</div>\\n\\n<div>\\n  <button mat-raised-button (click)=\\\"submit()\\\"> Submit </button>\\n  <!-- <button mat-raised-button routerLink=\\\"/lbaas\\\" class=\\\"submit\\\"> Submit </button>   -->\\n  <!-- <button mat-raised-button (click)=\\\"cancel()\\\"> Cancel </button> -->\\n  <button mat-raised-button routerLink=\\\"/iaas\\\" class=\\\"cancel\\\"> Cancel </button>\\n</div>\"","module.exports = \"button {\\n  font-size: 20px;\\n  margin-top: 30px;\\n  margin-left: 150px;\\n  margin-right: auto; }\\n\\n.addMarginFromTop {\\n  margin-top: 150px; }\\n\\nmat-form-field {\\n  width: 75%;\\n  margin-top: 10px;\\n  margin-left: 150px;\\n  margin-right: auto; }\\n\\n.container {\\n  margin-top: 100px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.container > * {\\n  width: 50%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nexport interface CreateVM {\n  name: string;\n  size: string;\n}\n\n@Component({\n  selector: 'app-create-vm',\n  templateUrl: './create-vm.component.html',\n  styleUrls: ['./create-vm.component.scss']\n})\nexport class CreateVmComponent implements OnInit {\n\n  public sizes = [];\n  enteredName: string; //what user typed for VM Name\n  selectedValue: string;  //what option the user clicks on VM Size drop down menu\n  url = 'https://iaasapi-patient-okapi.kpsj001.us-west.mybluemix.net/iaas/t_size/vmware';\n  // postUrl = '../../mockVM.json';\n  \n  // getData(): Observable<any> {\n  //   return this.http.get(this.url).map(res => res.json());\n  // }\n\n  getData(): Observable<CreateVM[]>{\n    return this.http.get<CreateVM[]>(this.url);\n  }\n\n  getSizes() {\n    this.getData().subscribe(\n      res => {\n        for (var i = 0; i < 3; i++) {\n          this.sizes.push(res[0][\"tsize\"][i][\"size\"]);\n        }\n        console.log(this.sizes);\n      });\n  }\n\n\n\n  submit(): void {\n    this.http.post(this.url, {\n      name: this.enteredName,\n      size: this.selectedValue\n      // size: this.size\n    })\n      .subscribe(\n        result => {\n          console.log(result);\n        },\n        err => {\n          console.log('Error occured'); \n        }\n      ); \n    console.log(\"name \" + this.enteredName );\n    console.log(\"size \" + this.selectedValue );\n  }\n\n  // constructor(private tshirtSizeService: TshirtSizeService, private http: HttpClient) { }\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getSizes();\n\n  }\n\n}\n","module.exports = \"<!-- <item></item> -->\\n\\n<!-- <h1>Infrastructure as a Service(IaaS)</h1>\\n<div>\\n    <p>IaaS API provides a RESTful service to perform Life Cycle operations on Virtual Machines which can be integrated as part of DevOps pipe line</p>\\n</div> -->\\n\\n<!-- <app-create-vm></app-create-vm> -->\\n\\n<div>\\n    <h1>Virtual Machines</h1>\\n      \\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n      \\n    <ng-container matColumnDef=\\\"VM Name\\\">\\n        <mat-header-cell *matHeaderCellDef> VM Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.name}} </mat-cell>\\n    </ng-container>\\n      \\n    <ng-container matColumnDef=\\\"Status\\\">\\n        <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.status}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Created By\\\">\\n        <mat-header-cell *matHeaderCellDef> Created By </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.by}} </mat-cell>\\n    </ng-container>\\n      \\n    <ng-container matColumnDef=\\\"Created Date\\\">\\n        <mat-header-cell *matHeaderCellDef> Created Date </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.date}} </mat-cell>\\n    </ng-container>\\n      \\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      \\n    </mat-table>\\n\\n    <button mat-raised-button [routerLink]=\\\"['create-vm']\\\">Create VM</button>\\n    <button mat-raised-button [routerLink]=\\\"['item']\\\">Create TShirt</button>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"h1 {\\n  text-align: center; }\\n\\nimg {\\n  margin-left: 310px;\\n  margin-right: auto; }\\n\\nmat-table {\\n  width: 75%;\\n  margin-top: 80px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nbutton {\\n  margin-top: 30px;\\n  margin-left: 150px;\\n  margin-right: auto;\\n  font-size: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface Orders {\n  by: string;\n  name: string;\n  date: string;\n  status: string;\n}\n\nconst MOCK_DATA: Orders[] = [\n  {name: \"Fatdog\", status: 'In Progress', by: 'Oracle', date: \"300 BC\"},\n  {name: \"Fedora\", status: 'Completed', by: 'Oracle', date: \"1985\", },\n  {name: \"Ubuntu\", status: 'In Progress', by: 'VM Ware', date: \"today\" }\n];\n\n@Component({\n  selector: 'app-iaas',\n  templateUrl: './iaas.component.html',\n  styleUrls: ['./iaas.component.scss']\n})\nexport class IaasComponent implements OnInit {\n\n  displayedColumns: string[] = ['VM Name','Status', 'Created By', 'Created Date' ];\n  dataSource = MOCK_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- <table class=\\\"container\\\"> \\n        <tr>\\n        <th>Entity </th>  \\n        <th>T-Shirt Size </th>\\n        <th>Configuration </th>\\n        <th>  </th>\\n        </tr>\\n        <tr *ngFor=\\\"let item of items; let i = index\\\">\\n          <td>\\n            <select [(ngModel)]=\\\"entity\\\" (ngModelChange)=\\\"update()\\\" name=\\\"entity-{{i}}\\\">\\n              <option value=\\\"server\\\">001 - Server</option>\\n              <option value=\\\"db\\\">002 - DB</option>\\n            </select>  \\n          </td>\\n          <td> \\n            <!- - <select [(ngModel)]=\\\"item.tshirtSize\\\" (ngModelChange)=\\\"updateCPU()\\\" >  - ->\\n            <select [(ngModel)]=\\\"tshirtSize\\\" (ngModelChange)=\\\"update()\\\" >  \\n              <option *ngFor=\\\"let size of sizes\\\" [value]=size>\\n                {{size}}\\n              </option>\\n            </select>\\n          </td>\\n      \\n          <td>\\n          <!- - <div> CPU Count: <input [(ngModel)]=\\\"item.cpu\\\" > </div> -- >\\n          <div> CPU Count: <input disabled [(ngModel)]=\\\"cpu\\\" placeholder=\\\"{{cpu}}\\\" >  </div>\\n          <!- - <div [(ngModel)]=\\\"item.cpu\\\"> CPU Count: {{cpuArray[0]}} </div> -- >\\n          <!- - i get a stupid error ^ -- >\\n\\n          <div> Memory: <input disabled [(ngModel)]=\\\"memory\\\" placeholder=\\\"{{memory}}\\\" >  </div>\\n          <div *ngIf=\\\"isDB\\\"> Disk: <input disabled [(ngModel)]=\\\"disk\\\" placeholder=\\\"{{disk}}\\\"> </div>\\n          </td>\\n      \\n          <td> \\n            <button title=\\\"delete\\\" (click)=\\\"delete(i)\\\">\\n              X\\n            </button> \\n          </td>\\n        </tr>   \\n        \\n        <button mat-raised-button (click)=\\\"submit()\\\">Submit</button>\\n        <button mat-raised-button class=\\\"cancel\\\" routerLink=\\\"/iaas\\\"> Cancel </button> \\n        <button mat-raised-button style=\\\"margin-left: 180px;\\\" (click)=\\\"add()\\\">Add New</button> \\n\\n</table> -->\\n    \\n\\n<div class=\\\"container\\\">\\n  <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8  \\\">\\n\\n    <ng-container matColumnDef=\\\"Entity\\\">\\n      <mat-header-cell *matHeaderCellDef> Entity </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let item\\\"> \\n        <mat-select [(ngModel)]=\\\"entity\\\" (ngModelChange)=\\\"update()\\\">\\n          <mat-option value=\\\"server\\\"> 001 - Server </mat-option>\\n          <mat-option value=\\\"db\\\"> 002 - DB </mat-option>\\n        </mat-select>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"T-Shirt Size\\\">\\n      <mat-header-cell *matHeaderCellDef> T-Shirt Size </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let item\\\"> \\n        <mat-select placeholder=\\\"Select Size\\\" [(ngModel)]=\\\"tshirtSize\\\" (ngModelChange)=\\\"update()\\\"> \\n          <mat-option *ngFor=\\\"let size of sizes\\\" [value]=size>\\n              {{size}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Configuration\\\">\\n      <mat-header-cell *matHeaderCellDef> Configuration </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let item\\\"> \\n        <form>\\n        <!-- <mat-form-field> -->\\n          <!-- <input matInput [(ngModel)]=\\\"item.cpu\\\" placeholder=\\\"CPU Count\\\" name=\\\"cpu\\\"> -->\\n\\n          <div> CPU Count: {{cpu}}  </div>\\n          <div> Memory: {{memory}} </div>\\n          <div *ngIf=\\\"isDB\\\"> Disk: {{disk}} </div> \\n          <!-- <div> Memory: <input disabled [(ngModel)]=\\\"memory\\\" placeholder=\\\"{{memory}}\\\" >  </div> -->\\n          <!-- <div *ngIf=\\\"isDB\\\"> Disk: <input disabled [(ngModel)]=\\\"disk\\\" placeholder=\\\"{{disk}}\\\"> </div> -->\\n\\n        <!-- </mat-form-field> -->\\n        <!-- <mat-form-field> -->\\n          <!-- <input matInput [(ngModel)]=\\\"item.memory\\\" placeholder=\\\"Memory\\\" name=\\\"memory\\\"> -->\\n        <!-- </mat-form-field> -->\\n        <!-- <mat-form-field> -->\\n          <!-- <input matInput [(ngModel)]=\\\"item.disk\\\" placeholder=\\\"Disk\\\" name=\\\"disk\\\"> -->\\n        <!-- </mat-form-field> -->\\n        </form>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n  <button mat-raised-button (click)=\\\"submit()\\\">Submit</button>\\n  <button mat-raised-button routerLink=\\\"/iaas\\\"> Cancel </button>\\n\\n</div>\"","module.exports = \"table {\\n  border-collapse: collapse; }\\n\\ntd {\\n  border: 1px solid black; }\\n\\nh1, h2 {\\n  text-align: center; }\\n\\nmat-table {\\n  width: 80%; }\\n\\nbutton {\\n  margin-top: 30px;\\n  margin-right: auto;\\n  font-size: 20px; }\\n\\nbutton.cancel {\\n  margin-left: 25px; }\\n\\n.container {\\n  margin-top: 100px;\\n  margin-left: 200px;\\n  margin-right: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\"","import { Component, Input, OnInit, Inject } from '@angular/core'; \nimport { Headers, RequestOptions } from \"@angular/http\"; \n// import {MatTableDataSource} from '@angular/material';\n// import {DataSource} from '@angular/cdk/collections';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpErrorResponse } from '@angular/common/http'; \nimport { Observable, of, BehaviorSubject } from 'rxjs';\n// import { BehaviorSubject } from 'rxjs';\n// import { Item } from './item'; \nimport { ItemService } from './item.service'; \nimport { Router } from '@angular/router';\n\nexport class DataResponse { \n    // id: number; \n    entity: string; \n    tshirtSize: string; \n    cpu: string; \n    memory: string; \n    disk: string;  \n} \n\nexport class Item {\n    entity: string;\n    tshirtSize: string;\n    cpu: string;\n    memory: string;\n    disk: string;\n  }\n  \n\nconst MOCK_DATA: DataResponse[] = [\n    {entity: \"001 - Server\", tshirtSize: \"small\", cpu: \"\", memory:\"memory\", disk:\"none\"},\n    // {entity: \"002 - Database\", tshirtSize: \"medium\", cpu: \"\", memory:\"memory\", disk:\"disk\"},\n  ];\n\n@Component ({ \n    selector: 'item', \n    templateUrl: './item.component.html', \n    styleUrls: ['./item.component.scss'],\n    // providers: [Observable]\n}) \n\nexport class ItemComponent  implements OnInit { \n    // public sizes = [\"Select Size\"];\n    public sizes = [];\n    public cpuArray = [];\n    public memoryArray = [];\n    public storageArray = [];\n    entity: string;\n    tshirtSize: string;\n    cpu: string;\n    memory: string;\n    disk: string;\n    //@Input() name: string;\n    items: Item[];\n    newItems: Item[];\n    public newItem: Item; \n    counter: 1; \n    isDB: boolean; \n    api = 'https://iaasapi-patient-okapi.kpsj001.us-west.mybluemix.net/iaas/t_size/vmware';\n    url = 'http://localhost:3000/items'; //mock db\n\n    displayedColumns: string[] = ['Entity', 'T-Shirt Size', 'Configuration'];\n    dataSource = MOCK_DATA;\n    // dataSource = this.items;\n    // dataSource = this.itemService.ITEMS;\n    subject = new BehaviorSubject(this.items);\n    //dataSource = new ItemComponent(this.itemService, this.http);\n    // dataSource = new ItemComponent( this.http);\n\n// constructor(private http: HttpClient)  { \nconstructor(private itemService: ItemService, private http: HttpClient, private router: Router)  { \n    \n    this.newItem = { \n        \"entity\": \"\", \n        \"tshirtSize\": \"\", \n        \"cpu\": \"\", \n        \"memory\": \"\",\n        \"disk\": \"\" \n    }\n} \n\ngetData(): Observable<Item[]>{\n    return this.http.get<Item[]>(this.api);\n}\n\ngetSizes() {\n    this.getData().subscribe(\n      res => {\n        for (var i = 0; i < 3; i++) {\n          this.sizes.push(res[0][\"tsize\"][i][\"size\"]);\n        }\n        console.log(\"Sizes Array: [\" + this.sizes + \"]\");\n        console.log(\"starting tshirt \" + this.tshirtSize);\n      });\n}\n\ngetCPU(){\n    this.getData().subscribe(\n      res => {\n        for ( let size in this.sizes) {\n            this.cpuArray.push(res[0][\"tsize\"][size][\"cpu\"]);\n        }\n        // this.cpu = this.cpuArray[size];\n    console.log(\"CPU Array: [\" + this.cpuArray  + \"]\");\n});\n\n    //   for {var i = 0; }\n    //   this.item.tshirtSize == small \n    //     cpu\n\n    //   if (this.sizes[0] === ) {\n        // this.cpu = this.cpuArray[0]; // this makes no sense\n        // console.log(this.cpu); // this makes no sense\n        // return this.cpu;\n    //   }\n  }\n\n  getMemory() {\n    this.getData().subscribe(\n        res => {\n          for ( let size in this.sizes) {\n              this.memoryArray.push(res[0][\"tsize\"][size][\"memory\"]);\n          }\n          // this.cpu = this.cpuArray[size];\n      console.log(\"Memory Array: [\" + this.memoryArray + \"]\");\n        });\n  }\n\n  getStorage() {\n    this.getData().subscribe(\n        res => {\n          for ( let size in this.sizes) {\n              this.storageArray.push(res[0][\"tsize\"][size][\"storage\"]);\n          }\n          // this.cpu = this.cpuArray[size];\n      console.log(\"Storage Array: [\" + this.storageArray  + \"]\");\n        });\n  }\n\n  update() {\n      console.log(this.entity + \" is selected\");\n//     var currentIndex: number;\n\n//     console.log(\"current entity selected: \" + this.entity);\n//     for (var i = 0; i < this.items.length; i++) {\n//         if (this.items[i].entity === \"db\") {\n//             this.isDB = true;\n//         }\n//         else {\n//             this.isDB = false;\n//         }\n        \n//         /*if (this.items[i].tshirtSize === this.sizes[i]) {\n//             currentIndex = i;\n//         }*/\n\n//     // if (this.items[0].entity === \"db\") {\n//     //     this.isDB = true;\n//     // }\n//     // else {\n//     //     this.isDB = false;\n//     // }\n\n\n//       for (var i = 0; i < this.sizes.length; i++ ) {\n//         if (this.tshirtSize === this.sizes[i]) {\n//         if (this.items[i].tshirtSize === this.sizes[i]) {\n//             currentIndex = i;\n//         }\n//     }\n// }\n//     this.items[i].cpu = this.cpuArray[currentIndex];\n//     console.log(\"matching cpu: \" + this.items[i].cpu);\n//       }\n\n//     console.log(\"current size selected: \" + this.tshirtSize);\n\n\n    //start\n    console.log(\"current entity selected: \" + this.entity);\n    if (this.entity === \"db\") {\n        this.isDB = true;\n    }\n    else {\n        this.isDB = false;\n    }\n\n    console.log(\"current size selected: \" + this.tshirtSize);\n      var currentIndex: number;\n      for (var i = 0; i < this.sizes.length; i++ ) {\n        if (this.tshirtSize === this.sizes[i]) {\n            currentIndex = i;\n        }\n      }\n      this.cpu = this.cpuArray[currentIndex];\n      console.log(\"matching cpu: \" + this.cpu);\n      this.memory = this.memoryArray[currentIndex];\n      console.log(\"matching memory: \" + this.memory);\n      this.disk = this.storageArray[currentIndex];\n      console.log(\"matching disk: \" + this.disk);\n    //end\n\n    //   this.cpu = this.cpuArray[currentIndex];\n    //   console.log(\"matching cpu: \" + this.cpu);\n    //   this.memory = this.memoryArray[currentIndex];\n    //   console.log(\"matching memory: \" + this.memory);\n    //   this.disk = this.storageArray[currentIndex];\n    //   console.log(\"matching disk: \" + this.disk);\n\n  } //end update()\n\n\n\ngetItems(): void { \n    this.itemService.getItems() \n    .subscribe(items => this.items = items); \n} \n\nadd(): void {\n    var xItem;\n    this.http.get<DataResponse>(this.url).subscribe(data => { \n        xItem = {\n            \"entity\": data.entity,\n            \"tshirtSize\": data.tshirtSize,\n            \"cpu\": data.cpu,\n            \"memory\": data.memory,\n            \"disk\": data.disk\n        };\n    this.items.push(xItem); \n    },\n        (err: HttpErrorResponse) => { \n            if (err.error instanceof Error) { \n                console.log(\"Client-side error occured.\"); \n            } else { \n                console.log(\"Server-side error occured.\"); \n            } \n        }\n    );\n\n    // MOCK_DATA.push(this.newItem);\n    // console.log(MOCK_DATA);\n    // this.dataSource = new MatTableDataSource(MOCK_DATA);\n    //this.dataSource = new MatTableDataSource(MOCK_DATA);\n\n    // this.items.push(this.newItem);\n    // this.subject.next(this.items);\n    // console.log(this.subject);\n    // console.log(this.items);\n}\n\ndelete(index): void { \n    this.items.splice(index, 1); \n} \n\nsubmit(): void { \n    for( var i=0; i < this.items.length; i++) {\n        console.log(this.items[i]);\n        this.http.post(this.url, { \n            id: this.counter++, \n            // entity: this.items[i].entity, \n            entity: this.entity, \n            // tshirtSize: this.items[i].tshirtSize, \n            tshirtSize: this.tshirtSize,\n            // cpu: this.items[i].cpu, \n            cpu: this.cpu, \n            // memory: this.items[i].memory, \n            memory: this.memory, \n            // disk: this.items[i].disk \n            disk: this.disk \n        }  \n        ) \n            .subscribe( \n                result => { \n                    console.log(result); \n                }, \n                err => { \n                    console.log('Error occured'); \n                } \n            ); \n    }\n\n    // this.router.navigate(['./']);\n} \n\n// selectDB() { \n//     this.isDB = true;\n//     return this.isDB; \n// } \n\n// selectServer(): void { \n//     this.isDB = false; \n// } \n\nngOnInit() { \n    this.getItems(); \n    this.getSizes();\n    this.getCPU();\n    this.getMemory();\n    this.getStorage();\n    this.isDB = false; \n} \n\n} ","import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport {DataSource} from '@angular/cdk/collections';\n\nexport class Item {\n  entity: string;\n  tshirtSize: string;\n  cpu: string;\n  memory: string;\n  disk: string;\n}\n\nexport const ITEMS: Item[] = [\n  //   { entity: 'server', tshirtSize: 's', cpu: '10', memory: '', disk: '' },\n  //   { entity: 'db', tshirtSize: 'm', cpu: '', memory: '', disk: '' },\n    { entity: '', tshirtSize: '', cpu: '', memory: '', disk: '' }\n  ];\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\n// @Injectable()\nexport class ItemService {\n// export class ItemService extends DataSource<any> {\n\n  // connect(): Observable<any[]> {\n  //   return this._list$;\n  // }\n\n  // disconnect() {\n  // }\n\n  \n  // constructor(private http: HttpClient, private _list$: Observable<any[]>) { \n    constructor(private http: HttpClient) { \n    // super();\n  }\n\n  // itemUrl = 'api/items';\n\n  getItems(): Observable<Item[]> {\n    return of(ITEMS);\n  }\n\n  /** GET heroes from the server */\n  // getItems (): Observable<Item[]> {\n  //   return this.http.get<Item[]>(this.itemUrl)\n  //     .pipe(\n  //       catchError(this.handleError('getHeroes', []))\n  //     );\n  // }\n\n    private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  //////// Save methods //////////\n\n  \n  /** POST: add a new item to the server */\n  // addItem (item: Item): Observable<Item> {\n  //   return this.http.post<Item>(this.heroesUrl, item, httpOptions).pipe(\n  //     catchError(this.handleError<Item>('addItem'))\n  //   );\n  // }\n\n    /** DELETE: delete the item from the server */\n  // deleteItem (item: Item | number): Observable<Item> {\n  //   const id = typeof item === 'number' ? item : item.id;\n  //   const url = `${this.heroesUrl}/${id}`;\n\n  //   return this.http.delete<Item>(url, httpOptions).pipe(\n  //     catchError(this.handleError<Item>('deleteItem'))\n  //   );\n  // }\n\n}","module.exports = \"<!-- <p>\\n  lbaas works!\\n</p> -->\\n<img src=\\\"../../assets/Phat_Huynh.jpg\\\">\\n\"","module.exports = \"img {\\n  margin-top: 50px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lbaas',\n  templateUrl: './lbaas.component.html',\n  styleUrls: ['./lbaas.component.scss']\n})\nexport class LbaasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <mat-form-field class=\\\"addMarginFromTop\\\"> \\n    <input matInput placeholder=\\\"Org ID\\\" [(ngModel)]=\\\"enterdID\\\">\\n    <!-- <mat-hint align=\\\"start\\\"><strong>a-z, 0-9, and '-' only</strong> </mat-hint> -->\\n    <!-- <mat-error *ngIf=\\\"hostName.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\n  </mat-form-field>\\n\\n  <mat-form-field> \\n    <input matInput placeholder=\\\"Org Name\\\" [(ngModel)]=\\\"enteredName\\\">\\n  </mat-form-field>\\n</div>\\n\\n<div>\\n<button mat-raised-button (click)=\\\"save()\\\"> Save </button>\\n<button mat-raised-button routerLink=\\\"/org-setup\\\" class=\\\"cancel\\\"> Cancel </button>\\n</div>\"","module.exports = \"button {\\n  font-size: 20px;\\n  margin-top: 30px;\\n  margin-left: 150px;\\n  margin-right: auto; }\\n\\n.addMarginFromTop {\\n  margin-top: 150px; }\\n\\nmat-form-field {\\n  width: 75%;\\n  margin-top: 10px;\\n  margin-left: 150px;\\n  margin-right: auto; }\\n\\n.container {\\n  margin-top: 100px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.container > * {\\n  width: 50%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface NewOrg {\n  id: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-new-org',\n  templateUrl: './new-org.component.html',\n  styleUrls: ['./new-org.component.scss']\n})\nexport class NewOrgComponent implements OnInit {\n  \n  enterdID: string;\n  enteredName: string;\n  \n  constructor() { }\n\n save(){\n   \n }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n    <h1>Org Setup</h1>\\n    <h2>Org List</h2>\\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n    <ng-container matColumnDef=\\\"Org ID\\\">\\n      <mat-header-cell *matHeaderCellDef> Org ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.orgID}} </mat-cell>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"Org Name\\\">\\n      <mat-header-cell *matHeaderCellDef> Org Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let mockdata\\\"> {{mockdata.orgName}} </mat-cell>\\n    </ng-container>\\n  \\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  \\n    </mat-table>\\n\\n    <button mat-raised-button routerLink=\\\"/new-org\\\" class=\\\"cancel\\\"> New Org </button>\\n    <button mat-raised-button>Edit Org</button>\\n    <button mat-raised-button>Delete Org</button>\\n    <button mat-raised-button routerLink=\\\"/admin-dashboard\\\" class=\\\"cancel\\\"> Cancel </button>\\n</div>\"","module.exports = \"h1, h2 {\\n  text-align: center; }\\n\\nmat-table {\\n  width: 80%;\\n  margin-top: 80px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nbutton {\\n  margin-top: 30px;\\n  margin-left: 120px;\\n  margin-right: auto;\\n  font-size: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface Inbox {\n  orgID: string;\n  orgName: string;\n}\n\nconst MOCK_DATA: Inbox[] = [\n  {orgID: \"12345\", orgName: 'IMG'},\n  {orgID: \"67890\", orgName: 'TRO'},\n  {orgID: \"11235\", orgName: 'CTO'}\n];\n\n@Component({\n  selector: 'app-org-setup',\n  templateUrl: './org-setup.component.html',\n  styleUrls: ['./org-setup.component.scss']\n})\nexport class OrgSetupComponent implements OnInit {\n\n  displayedColumns: string[] = ['Org ID', 'Org Name'];\n  dataSource = MOCK_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}